% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dplyr_integration.R
\name{db_copy_to}
\alias{db_copy_to}
\alias{db_copy_to.AthenaConnection}
\title{S3 implementation of \code{db_copy_to} for Athena}
\usage{
db_copy_to.AthenaConnection(con, table, values, overwrite = FALSE,
  append = FALSE, types = NULL, partition = NULL,
  s3_location = NULL, file_type = c("csv", "tsv", "parquet"))
}
\arguments{
\item{con}{A \code{\link{dbConnect}} object, as returned by \code{dbConnect()}}

\item{table}{A character string specifying a table name. Names will be
automatically quoted so you can use any sequence of characters, not
just any valid bare table name.}

\item{values}{A data.frame to write to the database.}

\item{overwrite}{Allow overwriting the destination table. Cannot be
`TRUE` if `append` is also `TRUE`.}

\item{append}{Allow appending to the destination table. Cannot be
`TRUE` if `overwrite` is also `TRUE`.}

\item{types}{Additional field types used to override derived types.}

\item{partition}{Partition Athena table (needs to be a named list or vector) for example: \code{c(var1 = "2019-20-13")}}

\item{s3_location}{s3 bucket to store Athena table, must be set as a s3 uri for example ("s3://mybucket/data/")}

\item{file_type}{What file type to store data.frame on s3, RAthena currently supports ["csv", "tsv", "parquet"]}
}
\value{
db_copy_to returns table name
}
\description{
This is an Athena method for dbplyr function \code{db_copy_to} to create an Athena table from a \code{data.frame}.
}
\seealso{
\code{\link{AthenaWriteTables}}
}
