# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ATHENA_S3_STAGING_DIR: ${{ secrets.AWS_ATHENA_S3_STAGING_DIR }}
      rathena_arn: ${{ secrets.rathena_arn }}
      rathena_s3_query: ${{ secrets.rathena_s3_query }}
      rathena_s3_tbl: ${{ secrets.rathena_s3_tbl }}
      ARROW_WITH_SNAPPY: ON
      R_KEEP_PKG_SOURCE: yes
      _R_CHECK_LENGTH_1_CONDITION_: abort,verbose
      _R_CHECK_LENGTH_1_LOGIC2_: abort,verbose
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v1
        with:
          extra-packages: |
            rcmdcheck
            covr
            
      - name: Install Miniconda
        run: |
          reticulate::install_miniconda()
        shell: Rscript {0}

      - name: Configure Miniconda on MacOS
        if: runner.os == 'macOS'
        run: echo "options(reticulate.conda_binary = reticulate:::miniconda_conda())" >> .Rprofile

      - name: Install python-boto3
        run: |
          RAthena::install_boto(method = "conda", envname = 'r-reticulate')
        shell: Rscript {0}
      
      - uses: r-lib/actions/check-r-package@v2

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Test coverage
        run: covr::codecov()
        shell: Rscript {0}
